/*
  Part of: CCLanguage
  Contents: public header file for CCLibraries projects
  Date: Jun  5, 2020

  Abstract

	This header file contains  definitions to be used by all  the packages in the
	CCLibraries project.  It defines some common types.

  Copyright (C) 2020 Marco Maggi <mrc.mgg@gmail.com>

  This is free software; you can redistribute  it and/or modify it under the terms of
  the GNU Lesser General Public License as published by the Free Software Foundation;
  either version 3.0 of the License, or (at your option) any later version.

  This library  is distributed in the  hope that it  will be useful, but  WITHOUT ANY
  WARRANTY; without  even the implied  warranty of  MERCHANTABILITY or FITNESS  FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License along with
  this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place,
  Suite 330, Boston, MA 02111-1307 USA.
*/

#ifndef CCLANGUAGE_TYPEDEFS_H
#define CCLANGUAGE_TYPEDEFS_H 1

#ifdef __cplusplus
extern "C" {
#endif


/** --------------------------------------------------------------------
 ** Header files.
 ** ----------------------------------------------------------------- */

#include <stdint.h>


/** --------------------------------------------------------------------
 ** Helper macros.
 ** ----------------------------------------------------------------- */

#define cclib_type_t(STEM)			cclib_ ## STEM ## _t
#define cclib_type_max(STEM)			(cclib_max_ ## STEM())
#define cclib_type_min(STEM)			(cclib_min_ ## STEM())
#define cclib_type_sizeof(STEM)			(cclib_sizeof_ ## STEM())
#define cclib_type_cast(STEM, EXPR)		((cclib_type_t(STEM))(EXPR))
#define cclib_type_const(STEM, VALUE)		(cclib_type_cast(STEM)(cclib_ ## @var{STEM} ## _const(VALUE)))

/* No parentheses around this macro expansion!!! */
#define cclib_type_pri(STEM)			cclib_pri_ ## STEM()
#define cclib_type_printf_cast(STEM, EXPR)	(cclib_ ## STEM ## _printf_cast(EXPR))


/** --------------------------------------------------------------------
 ** Common type definitions: opaque data structures handling.
 ** ----------------------------------------------------------------- */

typedef void				cclib_resource_data_t;
typedef cclib_resource_data_t *		cclib_resource_pointer_t;

#undef  cclib_resource_pointer
#define cclib_resource_pointer(EXPR)	((cclib_resource_pointer_t)(EXPR))


/** --------------------------------------------------------------------
 ** C language types and type aliases.
 ** ----------------------------------------------------------------- */

typedef void				cclib_void_t;

typedef int8_t				cclib_sint8_t;
typedef uint8_t				cclib_uint8_t;
typedef int16_t				cclib_sint16_t;
typedef uint16_t			cclib_uint16_t;
typedef int32_t				cclib_sint32_t;
typedef uint32_t			cclib_uint32_t;
typedef int64_t				cclib_sint64_t;
typedef uint64_t			cclib_uint64_t;

typedef cclib_sint8_t			cclib_byte_t;
typedef cclib_uint8_t			cclib_octet_t;
typedef @MMUX_VALUEOF_WORD_ALIAS@	cclib_word_t;

typedef char				cclib_char_t;
typedef signed char			cclib_schar_t;
typedef unsigned char			cclib_uchar_t;
typedef signed short int		cclib_sshort_t;
typedef unsigned short int		cclib_ushort_t;
typedef signed int			cclib_sint_t;
typedef unsigned int			cclib_uint_t;
typedef signed long			cclib_slong_t;
typedef unsigned long			cclib_ulong_t;
typedef signed long long		cclib_sllong_t;
typedef unsigned long long		cclib_ullong_t;

typedef float				cclib_float_t;
typedef double				cclib_double_t;
typedef long double			cclib_ldouble_t;

typedef @MMUX_VALUEOF_SINTMAX_ALIAS@	cclib_sintmax_t;
typedef @MMUX_VALUEOF_UINTMAX_ALIAS@	cclib_uintmax_t;
typedef @MMUX_VALUEOF_SINTPTR_ALIAS@	cclib_sintptr_t;
typedef @MMUX_VALUEOF_UINTPTR_ALIAS@	cclib_uintptr_t;
typedef @MMUX_VALUEOF_PTRDIFF_ALIAS@	cclib_ptrdiff_t;

typedef @MMUX_VALUEOF_SSIZE_ALIAS@	cclib_ssize_t;
typedef @MMUX_VALUEOF_USIZE_ALIAS@	cclib_usize_t;
typedef @MMUX_VALUEOF_OFF_ALIAS@	cclib_off_t;

typedef @MMUX_VALUEOF_WINT_ALIAS@	cclib_wint_t;
typedef @MMUX_VALUEOF_WCHAR_ALIAS@	cclib_wchar_t;


/** --------------------------------------------------------------------
 ** Type cast macros.
 ** ----------------------------------------------------------------- */

#define cclib_sint8(EXPR)		((cclib_sint8_t)(EXPR))
#define cclib_uint8(EXPR)		((cclib_uint8_t)(EXPR))
#define cclib_sint16(EXPR)		((cclib_sint16_t)(EXPR))
#define cclib_uint16(EXPR)		((cclib_uint16_t)(EXPR))
#define cclib_sint32(EXPR)		((cclib_sint32_t)(EXPR))
#define cclib_uint32(EXPR)		((cclib_uint32_t)(EXPR))
#define cclib_sint64(EXPR)		((cclib_sint64_t)(EXPR))
#define cclib_uint64(EXPR)		((cclib_uint64_t)(EXPR))

#define cclib_byte(EXPR)		cclib_sint8(EXPR)
#define cclib_octet(EXPR)		cclib_uint8(EXPR)
#define cclib_word(EXPR)		((cclib_word_t)(EXPR))

#define cclib_char(EXPR)		((cclib_char_t)(EXPR))
#define cclib_schar(EXPR)		((cclib_schar_t)(EXPR))
#define cclib_uchar(EXPR)		((cclib_uchar_t)(EXPR))
#define cclib_sshrt(EXPR)		((cclib_sshrt_t)(EXPR))
#define cclib_ushrt(EXPR)		((cclib_ushrt_t)(EXPR))
#define cclib_sint(EXPR)		((cclib_sint_t)(EXPR))
#define cclib_uint(EXPR)		((cclib_uint_t)(EXPR))
#define cclib_slong(EXPR)		((cclib_slong_t)(EXPR))
#define cclib_ulong(EXPR)		((cclib_ulong_t)(EXPR))
#define cclib_sllong(EXPR)		((cclib_sllong_t)(EXPR))
#define cclib_ullong(EXPR)		((cclib_ullong_t)(EXPR))

#define cclib_sintmax(EXPR)		((cclib_sintmax_t)(EXPR))
#define cclib_uintmax(EXPR)		((cclib_uintmax_t)(EXPR))
#define cclib_sintptr(EXPR)		((cclib_sintptr_t)(EXPR))
#define cclib_uintptr(EXPR)		((cclib_uintptr_t)(EXPR))
#define cclib_ptrdiff(EXPR)		((cclib_ptrdiff_t)(EXPR))

#define cclib_ssize(EXPR)		((cclib_ssize_t)(EXPR))
#define cclib_usize(EXPR)		((cclib_usize_t)(EXPR))
#define cclib_off(EXPR)			((cclib_off_t)(EXPR))

#define cclib_wchar(EXPR)		((cclib_wchar_t)(EXPR))
#define cclib_wint(EXPR)		((cclib_wint_t)(EXPR))

#define cclib_float(EXPR)		((cclib_float_t)(EXPR))
#define cclib_double(EXPR)		((cclib_double_t)(EXPR))
#define cclib_ldouble(EXPR)		((cclib_ldouble_t)(EXPR))


/** --------------------------------------------------------------------
 ** C language types sizes.
 ** ----------------------------------------------------------------- */

#define cclib_sizeof_sint8()		@MMUX_SIZEOF_SINT8@
#define cclib_sizeof_uint8()		@MMUX_SIZEOF_UINT8@
#define cclib_sizeof_sint16()		@MMUX_SIZEOF_SINT16@
#define cclib_sizeof_uint16()		@MMUX_SIZEOF_UINT16@
#define cclib_sizeof_sint32()		@MMUX_SIZEOF_SINT32@
#define cclib_sizeof_uint32()		@MMUX_SIZEOF_UINT32@
#define cclib_sizeof_sint64()		@MMUX_SIZEOF_SINT64@
#define cclib_sizeof_uint64()		@MMUX_SIZEOF_UINT64@

#define cclib_sizeof_byte()		cclib_sizeof_sint8()
#define cclib_sizeof_octet()		cclib_sizeof_uint8()
#define cclib_sizeof_word()		@MMUX_SIZEOF_WORD@

#define cclib_sizeof_char()		@MMUX_SIZEOF_CHAR@
#define cclib_sizeof_schar()		@MMUX_SIZEOF_SCHAR@
#define cclib_sizeof_uchar()		@MMUX_SIZEOF_UCHAR@
#define cclib_sizeof_sshrt()		@MMUX_SIZEOF_SSHRT@
#define cclib_sizeof_ushrt()		@MMUX_SIZEOF_USHRT@
#define cclib_sizeof_sint()		@MMUX_SIZEOF_SINT@
#define cclib_sizeof_uint()		@MMUX_SIZEOF_UINT@
#define cclib_sizeof_slong()		@MMUX_SIZEOF_SLONG@
#define cclib_sizeof_ulong()		@MMUX_SIZEOF_ULONG@
#define cclib_sizeof_sllong()		@MMUX_SIZEOF_SLLONG@
#define cclib_sizeof_ullong()		@MMUX_SIZEOF_ULLONG@

#define cclib_sizeof_sintmax()		@MMUX_SIZEOF_SINTMAX@
#define cclib_sizeof_uintmax()		@MMUX_SIZEOF_UINTMAX@
#define cclib_sizeof_sintptr()		@MMUX_SIZEOF_SINTPTR@
#define cclib_sizeof_uintptr()		@MMUX_SIZEOF_UINTPTR@
#define cclib_sizeof_ptrdiff()		@MMUX_SIZEOF_PTRDIFF@

#define cclib_sizeof_ssize()		@MMUX_SIZEOF_SSIZE@
#define cclib_sizeof_usize()		@MMUX_SIZEOF_USIZE@
#define cclib_sizeof_off()		@MMUX_SIZEOF_OFF@

#define cclib_sizeof_wchar()		@MMUX_SIZEOF_WCHAR@
#define cclib_sizeof_wint()		@MMUX_SIZEOF_WINT@

#define cclib_sizeof_float()		@MMUX_SIZEOF_FLOAT@
#define cclib_sizeof_double()		@MMUX_SIZEOF_DOUBLE@
#define cclib_sizeof_ldouble()		@MMUX_SIZEOF_LDOUBLE@


/** --------------------------------------------------------------------
 ** Compile-time constant declarators.
 ** ----------------------------------------------------------------- */

#define cclib_sint8_const(CONST_VALUE)		(cclib_sint8(CONST_VALUE))
#define cclib_uint8_const(CONST_VALUE)		(cclib_uint8(CONST_VALUE))
#define cclib_sint16_const(CONST_VALUE)		(cclib_sint16(CONST_VALUE))
#define cclib_uint16_const(CONST_VALUE)		(cclib_uint16(CONST_VALUE))

#if   (cclib_sizeof_sint32() == cclib_sizeof_sint())
#  define cclib_sint32_const(CONST_VALUE)	cclib_sint32(CONST_VALUE)
#  define cclib_uint32_const(CONST_VALUE)	cclib_uint32(CONST_VALUE)
#elif (cclib_sizeof_sint32() == cclib_sizeof_slong())
#  define cclib_sint32_const(CONST_VALUE)	cclib_sint32(CONST_VALUE ## L)
#  define cclib_uint32_const(CONST_VALUE)	cclib_uint32(CONST_VALUE ## UL)
#else
#  define cclib_sint32_const(CONST_VALUE)	cclib_sint32(CONST_VALUE ## LL)
#  define cclib_uint32_const(CONST_VALUE)	cclib_uint32(CONST_VALUE ## ULL)
#endif

#if   (cclib_sizeof_sint64() == cclib_sizeof_sint())
#  define cclib_sint64_const(CONST_VALUE)	cclib_sint64(CONST_VALUE)
#  define cclib_uint64_const(CONST_VALUE)	cclib_uint64(CONST_VALUE)
#elif (cclib_sizeof_sint64() == cclib_sizeof_slong())
#  define cclib_sint64_const(CONST_VALUE)	cclib_sint64(CONST_VALUE ## L)
#  define cclib_uint64_const(CONST_VALUE)	cclib_uint64(CONST_VALUE ## UL)
#else
#  define cclib_sint64_const(CONST_VALUE)	cclib_sint64(CONST_VALUE ## LL)
#  define cclib_uint64_const(CONST_VALUE)	cclib_uint64(CONST_VALUE ## ULL)
#endif

#define cclib_byte_const(CONST_VALUE)		(cclib_byte(CONST_VALUE))
#define cclib_octet_const(CONST_VALUE)		(cclib_octet(CONST_VALUE))

#if   (cclib_sizeof_word() == cclib_sizeof_sint())
#  define cclib_word_const(CONST_VALUE)		cclib_word(CONST_VALUE)
#elif (cclib_sizeof_word() == cclib_sizeof_slong())
#  define cclib_word_const(CONST_VALUE)		cclib_word(CONST_VALUE ## L)
#else
#  define cclib_word_const(CONST_VALUE)		cclib_word(CONST_VALUE ## LL)
#endif

#define cclib_char_const(CONST_VALUE)		(cclib_char(CONST_VALUE))
#define cclib_schar_const(CONST_VALUE)		(cclib_schar(CONST_VALUE))
#define cclib_uchar_const(CONST_VALUE)		(cclib_uchar(CONST_VALUE))
#define cclib_sshrt_const(CONST_VALUE)		(cclib_sshrt(CONST_VALUE))
#define cclib_ushrt_const(CONST_VALUE)		(cclib_ushrt(CONST_VALUE))
#define cclib_sint_const(CONST_VALUE)		(cclib_sint(CONST_VALUE))
#define cclib_uint_const(CONST_VALUE)		(cclib_uint(CONST_VALUE))

#if   (cclib_sizeof_slong() == cclib_sizeof_sint())
#  define cclib_slong_const(CONST_VALUE)	cclib_slong(CONST_VALUE)
#  define cclib_ulong_const(CONST_VALUE)	cclib_ulong(CONST_VALUE)
#elif (cclib_sizeof_slong() == cclib_sizeof_slong())
#  define cclib_slong_const(CONST_VALUE)	cclib_slong(CONST_VALUE ## L)
#  define cclib_ulong_const(CONST_VALUE)	cclib_ulong(CONST_VALUE ## UL)
#else
#  define cclib_slong_const(CONST_VALUE)	cclib_slong(CONST_VALUE ## LL)
#  define cclib_ulong_const(CONST_VALUE)	cclib_ulong(CONST_VALUE ## ULL)
#endif

#if   (cclib_sizeof_sllong() == cclib_sizeof_sint())
#  define cclib_sllong_const(CONST_VALUE)	cclib_sllong(CONST_VALUE)
#  define cclib_ullong_const(CONST_VALUE)	cclib_ullong(CONST_VALUE)
#elif (cclib_sizeof_sllong() == cclib_sizeof_slong())
#  define cclib_sllong_const(CONST_VALUE)	cclib_sllong(CONST_VALUE ## L)
#  define cclib_ullong_const(CONST_VALUE)	cclib_ullong(CONST_VALUE ## UL)
#else
#  define cclib_sllong_const(CONST_VALUE)	cclib_sllong(CONST_VALUE ## LL)
#  define cclib_ullong_const(CONST_VALUE)	cclib_ullong(CONST_VALUE ## ULL)
#endif

#if   (cclib_sizeof_sintptr() == cclib_sizeof_sint())
#  define cclib_sintptr_const(CONST_VALUE)	cclib_sintptr(CONST_VALUE)
#  define cclib_uintptr_const(CONST_VALUE)	cclib_uintptr(CONST_VALUE)
#elif (cclib_sizeof_sintptr() == cclib_sizeof_slong())
#  define cclib_sintptr_const(CONST_VALUE)	cclib_sintptr(CONST_VALUE ## L)
#  define cclib_uintptr_const(CONST_VALUE)	cclib_uintptr(CONST_VALUE ## UL)
#else
#  define cclib_sintptr_const(CONST_VALUE)	cclib_sintptr(CONST_VALUE ## LL)
#  define cclib_uintptr_const(CONST_VALUE)	cclib_uintptr(CONST_VALUE ## ULL)
#endif

#if   (cclib_sizeof_sintmax() == cclib_sizeof_sint())
#  define cclib_sintmax_const(CONST_VALUE)	cclib_sintmax(CONST_VALUE)
#  define cclib_uintmax_const(CONST_VALUE)	cclib_uintmax(CONST_VALUE)
#elif (cclib_sizeof_sintmax() == cclib_sizeof_slong())
#  define cclib_sintmax_const(CONST_VALUE)	cclib_sintmax(CONST_VALUE ## L)
#  define cclib_uintmax_const(CONST_VALUE)	cclib_uintmax(CONST_VALUE ## UL)
#else
#  define cclib_sintmax_const(CONST_VALUE)	cclib_sintmax(CONST_VALUE ## LL)
#  define cclib_uintmax_const(CONST_VALUE)	cclib_uintmax(CONST_VALUE ## ULL)
#endif

#if   (cclib_sizeof_ptrdiff() == cclib_sizeof_sint())
#  define cclib_ptrdiff_const(CONST_VALUE)	cclib_ptrdiff(CONST_VALUE)
#elif (cclib_sizeof_ptrdiff() == cclib_sizeof_slong())
#  define cclib_ptrdiff_const(CONST_VALUE)	cclib_ptrdiff(CONST_VALUE ## L)
#else
#  define cclib_ptrdiff_const(CONST_VALUE)	cclib_ptrdiff(CONST_VALUE ## LL)
#endif

#if   (cclib_sizeof_ssize() == cclib_sizeof_sint())
#  define cclib_ssize_const(CONST_VALUE)	cclib_ssize(CONST_VALUE)
#  define cclib_usize_const(CONST_VALUE)	cclib_usize(CONST_VALUE)
#elif (cclib_sizeof_ssize() == cclib_sizeof_slong())
#  define cclib_ssize_const(CONST_VALUE)	cclib_ssize(CONST_VALUE ## L)
#  define cclib_usize_const(CONST_VALUE)	cclib_usize(CONST_VALUE ## UL)
#else
#  define cclib_ssize_const(CONST_VALUE)	cclib_ssize(CONST_VALUE ## LL)
#  define cclib_usize_const(CONST_VALUE)	cclib_usize(CONST_VALUE ## ULL)
#endif

#if   (cclib_sizeof_off() == cclib_sizeof_sint())
#  define cclib_off_const(CONST_VALUE)		cclib_off(CONST_VALUE)
#elif (cclib_sizeof_off() == cclib_sizeof_slong())
#  define cclib_off_const(CONST_VALUE)		cclib_off(CONST_VALUE ## L)
#else
#  define cclib_off_const(CONST_VALUE)		cclib_off(CONST_VALUE ## LL)
#endif

#if   (cclib_sizeof_wint() == cclib_sizeof_sint())
#  define cclib_wint_const(CONST_VALUE)		cclib_wint(CONST_VALUE)
#elif (cclib_sizeof_wint() == cclib_sizeof_slong())
#  define cclib_wint_const(CONST_VALUE)		cclib_wint(CONST_VALUE ## L)
#else
#  define cclib_wint_const(CONST_VALUE)		cclib_wint(CONST_VALUE ## LL)
#endif

#if   (cclib_sizeof_wchar() == cclib_sizeof_sint())
#  define cclib_wchar_const(CONST_VALUE)	cclib_wchar(CONST_VALUE)
#elif (cclib_sizeof_wchar() == cclib_sizeof_slong())
#  define cclib_wchar_const(CONST_VALUE)	cclib_wchar(CONST_VALUE ## L)
#else
#  define cclib_wchar_const(CONST_VALUE)	cclib_wchar(CONST_VALUE ## LL)
#endif

#define cclib_float_const(CONST_VALUE)		(cclib_float(CONST_VALUE ## F))
#define cclib_double_const(CONST_VALUE)		(cclib_double(CONST_VALUE))
#define cclib_ldouble_const(CONST_VALUE)	(cclib_ldouble(CONST_VALUE ## L))


/** --------------------------------------------------------------------
 ** C language types limits.
 ** ----------------------------------------------------------------- */

#define cclib_min_sint8()	cclib_sint8(@MMUX_VALUEOF_SINT8_MIN@)
#define cclib_max_sint8()	cclib_sint8(@MMUX_VALUEOF_SINT8_MAX@)

#define cclib_min_uint8()	cclib_uint8(@MMUX_VALUEOF_UINT8_MIN@)
#define cclib_max_uint8()	cclib_uint8(@MMUX_VALUEOF_UINT8_MAX@)

#define cclib_min_sint16()	cclib_sint16(@MMUX_VALUEOF_SINT16_MIN@)
#define cclib_max_sint16()	cclib_sint16(@MMUX_VALUEOF_SINT16_MAX@)

#define cclib_min_uint16()	cclib_uint16(@MMUX_VALUEOF_UINT16_MIN@)
#define cclib_max_uint16()	cclib_uint16(@MMUX_VALUEOF_UINT16_MAX@)

#define cclib_min_sint32()	cclib_sint32_const(@MMUX_VALUEOF_SINT32_MIN@)
#define cclib_max_sint32()	cclib_sint32_const(@MMUX_VALUEOF_SINT32_MAX@)

#define cclib_min_uint32()	cclib_uint32_const(@MMUX_VALUEOF_UINT32_MIN@)
#define cclib_max_uint32()	cclib_uint32_const(@MMUX_VALUEOF_UINT32_MAX@)

/* NOTE If we define:
 *
 *   #define CCLIB_MIN_SINT64	-9223372036854775808L
 *
 * the preprocessor will first read 9223372036854775808L  and then will try to negate
 * it.  But 9223372036854775808L is too big to fit into a sint64: so an error will be
 * raised.  This is why we must define it as it is.  (Marco Maggi; Jul  3, 2020)
 */
#define cclib_min_sint64()	(-cclib_sint64_const(@MMUX_VALUEOF_SINT64_MAX@) - cclib_sint64_const(1))
#define cclib_max_sint64()	cclib_sint64_const(@MMUX_VALUEOF_SINT64_MAX@)

#define cclib_min_uint64()	cclib_uint64_const(@MMUX_VALUEOF_UINT64_MIN@)
#define cclib_max_uint64()	cclib_uint64_const(@MMUX_VALUEOF_UINT64_MAX@)

/* ------------------------------------------------------------------ */

#define cclib_min_byte()	cclib_min_sint8()
#define cclib_max_byte()	cclib_max_sint8()

#define cclib_min_octet()	cclib_min_uint8()
#define cclib_max_octet()	cclib_max_uint8()

#define cclib_min_word()	(-cclib_word_const(@MMUX_VALUEOF_WORD_MAX@) - cclib_word_const(1))
#define cclib_max_word()	cclib_word_const(@MMUX_VALUEOF_WORD_MAX@)

/* ------------------------------------------------------------------ */

#define cclib_min_char()	cclib_char(@MMUX_VALUEOF_CHAR_MIN@)
#define cclib_max_char()	cclib_char(@MMUX_VALUEOF_CHAR_MAX@)

#define cclib_min_schar()	cclib_schar(@MMUX_VALUEOF_SCHAR_MIN@)
#define cclib_max_schar()	cclib_schar(@MMUX_VALUEOF_SCHAR_MAX@)

#define cclib_min_uchar()	cclib_uchar(0)
#define cclib_max_uchar()	cclib_uchar(@MMUX_VALUEOF_UCHAR_MAX@)

#define cclib_min_sshrt()	cclib_sshrt(@MMUX_VALUEOF_SHRT_MIN@)
#define cclib_max_sshrt()	cclib_sshrt(@MMUX_VALUEOF_SHRT_MAX@)

#define cclib_min_ushrt()	cclib_ushrt(0)
#define cclib_max_ushrt()	cclib_ushrt(@MMUX_VALUEOF_USHRT_MAX@)

#define cclib_min_sint()	cclib_sint(@MMUX_VALUEOF_INT_MIN@)
#define cclib_max_sint()	cclib_sint(@MMUX_VALUEOF_INT_MAX@)

#define cclib_min_uint()	cclib_uint(0)
#define cclib_max_uint()	cclib_uint(@MMUX_VALUEOF_UINT_MAX@)

#define cclib_min_slong()	(-cclib_slong_const(@MMUX_VALUEOF_LONG_MAX@) - cclib_slong_const(1))
#define cclib_max_slong()	cclib_slong(@MMUX_VALUEOF_LONG_MAX@L)

#define cclib_min_ulong()	cclib_ulong(0UL)
#define cclib_max_ulong()	cclib_ulong(@MMUX_VALUEOF_ULONG_MAX@UL)

#define cclib_min_sllong()	(-cclib_sllong_const(@MMUX_VALUEOF_LLONG_MAX@) - cclib_sllong_const(1))
#define cclib_max_sllong()	cclib_sllong(@MMUX_VALUEOF_LLONG_MAX@LL)

#define cclib_min_ullong()	cclib_ullong(0ULL)
#define cclib_max_ullong()	cclib_ullong(@MMUX_VALUEOF_ULLONG_MAX@ULL)

/* ------------------------------------------------------------------ */

#define cclib_min_sintmax()	(-cclib_sintmax_const(@MMUX_VALUEOF_SINTMAX_MAX@) - cclib_sintmax_const(1))
#define cclib_max_sintmax()	cclib_sintmax_const(@MMUX_VALUEOF_SINTMAX_MAX@)

#define cclib_min_uintmax()	cclib_uintmax_const(0)
#define cclib_max_uintmax()	cclib_uintmax_const(@MMUX_VALUEOF_UINTMAX_MAX@)

#define cclib_min_sintptr()	(-cclib_sintptr_const(@MMUX_VALUEOF_SINTPTR_MAX@) - cclib_sintptr_const(1))
#define cclib_max_sintptr()	cclib_sintptr_const(@MMUX_VALUEOF_SINTPTR_MAX@)

#define cclib_min_uintptr()	cclib_uintptr_const(0)
#define cclib_max_uintptr()	cclib_uintptr_const(@MMUX_VALUEOF_UINTPTR_MAX@)

#define cclib_min_ptrdiff()	(-cclib_ptrdiff_const(@MMUX_VALUEOF_PTRDIFF_MAX@) - cclib_ptrdiff_const(1))
#define cclib_max_ptrdiff()	cclib_ptrdiff_const(@MMUX_VALUEOF_PTRDIFF_MAX@)

#define cclib_min_ssize()	(-cclib_ssize_const(@MMUX_VALUEOF_SSIZE_MAX@) - cclib_ssize_const(1))
#define cclib_max_ssize()	cclib_ssize_const(@MMUX_VALUEOF_SSIZE_MAX@)

#define cclib_min_usize()	cclib_usize_const(0)
#define cclib_max_usize()	cclib_usize_const(@MMUX_VALUEOF_USIZE_MAX@)

#define cclib_min_off()		(-cclib_off_const(@MMUX_VALUEOF_OFF_MAX@) - cclib_off_const(1))
#define cclib_max_off()		cclib_off_const(@MMUX_VALUEOF_OFF_MAX@)

/* ------------------------------------------------------------------ */

#define cclib_min_wint()	cclib_wint_const(@MMUX_VALUEOF_WINT_MIN@)
#define cclib_max_wint()	cclib_wint_const(@MMUX_VALUEOF_WINT_MAX@)

#define cclib_min_wchar()	cclib_wchar_const(@MMUX_VALUEOF_WCHAR_MIN@)
#define cclib_max_wchar()	cclib_wchar_const(@MMUX_VALUEOF_WCHAR_MAX@)

/* ------------------------------------------------------------------ */

#define cclib_min_float()	cclib_float(@MMUX_VALUEOF_FLT_MIN@F)
#define cclib_max_float()	cclib_float(@MMUX_VALUEOF_FLT_MAX@F)

#define cclib_min_double()	cclib_double(@MMUX_VALUEOF_DBL_MIN@)
#define cclib_max_double()	cclib_double(@MMUX_VALUEOF_DBL_MAX@)

#define cclib_min_ldouble()	cclib_ldouble(@MMUX_VALUEOF_LDBL_MIN@L)
#define cclib_max_ldouble()	cclib_ldouble(@MMUX_VALUEOF_LDBL_MAX@L)


/** --------------------------------------------------------------------
 ** Printf/scanf format specifiers.
 ** ----------------------------------------------------------------- */

#define cclib_pri_sint8()	"@MMUX_VALUEOF_PRI_SINT8@"
#define cclib_pri_uint8()	"@MMUX_VALUEOF_PRI_UINT8@"
#define cclib_pri_sint16()	"@MMUX_VALUEOF_PRI_SINT16@"
#define cclib_pri_uint16()	"@MMUX_VALUEOF_PRI_UINT16@"
#define cclib_pri_sint32()	"@MMUX_VALUEOF_PRI_SINT32@"
#define cclib_pri_uint32()	"@MMUX_VALUEOF_PRI_UINT32@"
#define cclib_pri_sint64()	"@MMUX_VALUEOF_PRI_SINT64@"
#define cclib_pri_uint64()	"@MMUX_VALUEOF_PRI_UINT64@"

#define cclib_pri_byte()	cclib_pri_sint8()
#define cclib_pri_octet()	cclib_pri_uint8()
#define cclib_pri_word()	"@MMUX_VALUEOF_PRI_WORD@"

#define cclib_pri_char()	"@MMUX_VALUEOF_PRI_CHAR@"
#define cclib_pri_schar()	"@MMUX_VALUEOF_PRI_SCHAR@"
#define cclib_pri_uchar()	"@MMUX_VALUEOF_PRI_UCHAR@"
#define cclib_pri_sshrt()	"@MMUX_VALUEOF_PRI_SSHRT@"
#define cclib_pri_ushrt()	"@MMUX_VALUEOF_PRI_USHRT@"
#define cclib_pri_sint()	"@MMUX_VALUEOF_PRI_SINT@"
#define cclib_pri_uint()	"@MMUX_VALUEOF_PRI_UINT@"
#define cclib_pri_slong()	"@MMUX_VALUEOF_PRI_SLONG@"
#define cclib_pri_ulong()	"@MMUX_VALUEOF_PRI_ULONG@"
#define cclib_pri_sllong()	"@MMUX_VALUEOF_PRI_SLLONG@"
#define cclib_pri_ullong()	"@MMUX_VALUEOF_PRI_ULLONG@"

#define cclib_pri_sintmax()	"@MMUX_VALUEOF_PRI_SINTMAX@"
#define cclib_pri_uintmax()	"@MMUX_VALUEOF_PRI_UINTMAX@"
#define cclib_pri_sintptr()	"@MMUX_VALUEOF_PRI_SINTPTR@"
#define cclib_pri_uintptr()	"@MMUX_VALUEOF_PRI_UINTPTR@"
#define cclib_pri_ptrdiff()	"@MMUX_VALUEOF_PRI_PTRDIFF@"

#define cclib_pri_ssize()	"@MMUX_VALUEOF_PRI_SSIZE@"
#define cclib_pri_usize()	"@MMUX_VALUEOF_PRI_USIZE@"
#define cclib_pri_off()		"@MMUX_VALUEOF_PRI_OFF@"

#define cclib_pri_wchar()	"@MMUX_VALUEOF_PRI_WCHAR@"
#define cclib_pri_wint()	"@MMUX_VALUEOF_PRI_WINT@"

#define cclib_pri_float()	"A"
#define cclib_pri_double()	"lA"
#define cclib_pri_ldouble()	"LA"


/** --------------------------------------------------------------------
 ** Type conversion for printf arguments.
 ** ----------------------------------------------------------------- */

#define cclib_sint8_printf_cast(EXPR)		(cclib_sint(EXPR))
#define cclib_uint8_printf_cast(EXPR)		(cclib_uint(EXPR))
#define cclib_sint16_printf_cast(EXPR)		(cclib_sint(EXPR))
#define cclib_uint16_printf_cast(EXPR)		(cclib_uint(EXPR))
#define cclib_sint32_printf_cast(EXPR)		(EXPR)
#define cclib_uint32_printf_cast(EXPR)		(EXPR)
#define cclib_sint64_printf_cast(EXPR)		(EXPR)
#define cclib_uint64_printf_cast(EXPR)		(EXPR)

#define cclib_byte_printf_cast(EXPR)		(cclib_sint(EXPR))
#define cclib_octet_printf_cast(EXPR)		(cclib_uint(EXPR))
#define cclib_word_printf_cast(EXPR)		(EXPR)

#define cclib_char_printf_cast(EXPR)		(cclib_sint(EXPR))
#define cclib_schar_printf_cast(EXPR)		(cclib_sint(EXPR))
#define cclib_uchar_printf_cast(EXPR)		(cclib_uint(EXPR))
#define cclib_sshrt_printf_cast(EXPR)		(cclib_sint(EXPR))
#define cclib_ushrt_printf_cast(EXPR)		(cclib_uint(EXPR))
#define cclib_sint_printf_cast(EXPR)		(EXPR)
#define cclib_uint_printf_cast(EXPR)		(EXPR)
#define cclib_slong_printf_cast(EXPR)		(EXPR)
#define cclib_ulong_printf_cast(EXPR)		(EXPR)
#define cclib_sllong_printf_cast(EXPR)		(EXPR)
#define cclib_ullong_printf_cast(EXPR)		(EXPR)

#define cclib_sintmax_printf_cast(EXPR)		(EXPR)
#define cclib_uintmax_printf_cast(EXPR)		(EXPR)
#define cclib_sintptr_printf_cast(EXPR)		(EXPR)
#define cclib_uintptr_printf_cast(EXPR)		(EXPR)
#define cclib_ptrdiff_printf_cast(EXPR)		(EXPR)

#define cclib_ssize_printf_cast(EXPR)		(EXPR)
#define cclib_usize_printf_cast(EXPR)		(EXPR)
#define cclib_off_printf_cast(EXPR)		(EXPR)

#define cclib_wchar_printf_cast(EXPR)		(EXPR)
#define cclib_wint_printf_cast(EXPR)		(EXPR)

#define cclib_float_printf_cast(EXPR)		(cclib_double(EXPR))
#define cclib_double_printf_cast(EXPR)		(EXPR)
#define cclib_ldouble_printf_cast(EXPR)		(EXPR)


/** --------------------------------------------------------------------
 ** Done.
 ** ----------------------------------------------------------------- */

#ifdef __cplusplus
} // extern "C"
#endif

#endif /* defined CCLANGUAGE_TYPEDEFS_H */

/* end of file */
